name: linux-release

on:
  push:
    tags:
      - "*"

jobs:
  build-test:
    name: Build and test on Linux
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Restore cargo registry cache
        uses: actions/cache@v1
        with:
          path: ~/.cargo/registry
          key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-registry-
      - name: Restore cargo index cache
        uses: actions/cache@v1
        with:
          path: ~/.cargo/git
          key: ${{ runner.os }}-cargo-index-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-index-
      - name: Restore cargo build cache
        uses: actions/cache@v1
        with:
          path: target
          key: ${{ runner.os }}-cargo-build-target-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-build-target-
      - name: Install dependencies and set OS environment variable
        run: |
          sudo apt-get install -y libdbus-1-dev gnome-keyring dbus-x11 libssl-dev
          echo "GITHUB_ACTIONS_OS=linux" >> $GITHUB_ENV
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          components: rustfmt, clippy
      - name: Build
        env:
          RUSTFLAGS: "-C link-arg=-s"
          GITHUB_ACTIONS_OS: "${{ env.GITHUB_ACTIONS_OS }}"
        run: |
          cargo fmt -- --check
          cargo build --release --locked
          cargo clippy --release
          ci/test.sh
      - name: Publish to crates.io
        run: cargo publish -v --locked --token ${{ secrets.CRATES_IO_TOKEN }}
      - name: Upload build artifact
        uses: actions/upload-artifact@v1
        with:
          name: binary
          path: target/release/crowbar
  release:
    runs-on: ubuntu-latest
    needs: build-test
    steps:
      - name: Restore artifact from previous job
        uses: actions/download-artifact@v1
        with:
          name: binary
      - name: Upload binaries to release
        uses: svenstaro/upload-release-action@v1-release
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: binary/crowbar
          asset_name: crowbar-x86_64-linux
          tag: ${{ github.ref }}
          overwrite: true
